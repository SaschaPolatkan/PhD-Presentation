
<script>
    const pages = [
    "Titlepage.html",
    "LoC.html",
    "Topology1.html",
    "Topology2.html",
];
    
let currentpath = location.href.split("/").slice(-1); 
let currentindex = pages.indexOf(currentpath);
    /* 
    Solutions from: 
    https://stackoverflow.com/questions/3369593/how-to-detect-escape-key-press
    https://stackoverflow.com/questions/7077770/window-location-href-and-window-open-methods-in-javascript
    https://stackoverflow.com/questions/11679567/using-css-for-a-fade-in-effect-on-page-load
    https://stackoverflow.com/questions/7241341/can-i-set-an-opacity-only-to-the-background-image-of-a-div
    */
    /* document.getElementById("border").innerHTML = "whatever";  */
    /* let page = document.getElementById('border'); */

    /* let buttons = document.querySelectorAll('.btn');
    buttons[2].focus();  */
    /* Indexes from 0, so this focuses the third element, if the rest of the code is good */
    
    /* 
    https://stackoverflow.com/questions/10742349/focus-on-next-tabindex-of-html-element-onenter-keypress-by-jquery/40686327#40686327 
    https://stackoverflow.com/questions/69735714/is-there-a-way-to-focus-element-from-queryselectorall
    */
    /* The solution below seems overly complicated.  */
    function focusNextElement() {
            var focussable = Array.prototype.filter.call(document.querySelectorAll('.btn'),
            function(element) {
                return element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement
            }); 
            var index = focussable.indexOf(document.activeElement);
            focussable[index + 1].focus();
    };

    function focusPreviousElement() {
            var focussable = Array.prototype.filter.call(document.querySelectorAll('.btn'),
            function(element) {
                return element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement
            });
            var index = focussable.indexOf(document.activeElement);
            focussable[index - 1].focus();
    };

    
    /* 
   
    document.onkeydown = function(evt) {
        evt = evt || window.event;
        var isUp = false;
        var isDn = false;
        var isRight = false;
        var isLeft = false;
        let accnum= ""; 
        if ("key" in evt) {isUp = (evt.keyCode === 38);}
        if (isUp) {document.location.href ='Titlepage.html';}
        if ("key" in evt) {isDn = (evt.keyCode === 40);}
        if (isDn) {window.location.href ='Topology1.html';} 
        if ("key" in evt) {isLeft = (evt.keyCode === 37);}
        if (isLeft) {focusPreviousElement();}
        if ("key" in evt) {isRight = (evt.keyCode === 39);}
        if (isRight) {focusNextElement();}
        
        if ("key" in evt) {isEnter = (evt.keyCode === 13);}
        if (isEnter) {window.location.href =pages[3];}
    };
    */

    /* left arrow	37
        up arrow	38
        right arrow	39
        down arrow	40 */


    // https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event

    document.addEventListener("keydown", (evt) => {
    if (evt.isComposing || evt.keyCode === 229) {
        return;
    }
        pagenav(evt);}); 


    function pagenav(evt) {
        evt = evt || window.event;
        var isUp = false;
        var isDn = false;
        var isRight = false;
        var isLeft = false;
        let accnum= ""; 
        if ("key" in evt) {isUp = (evt.keyCode === 38);}
        if (isUp) {document.location.href ='Titlepage.html';}
        if ("key" in evt) {isDn = (evt.keyCode === 40);}
        if (isDn) {window.location.href ='Topology1.html';} 
        if ("key" in evt) {isLeft = (evt.keyCode === 37);}
        if (isLeft) {focusPreviousElement();}
        if ("key" in evt) {isRight = (evt.keyCode === 39);}
        if (isRight) {focusNextElement();}

        let isNumber = /^[0-9]$/i.test(evt.key);
        //let num=Number(evt.key);
        if(isNumber){
            document.getElementById("page-number").focus();
        };
        let pagenum = document.getElementById('page-number').value
        if (evt.key=="Enter"&& pagenum<pages.length){goToPage()}
        if (evt.key=="Enter"&& pagenum>=pages.length){document.getElementById('page-number').value = ''}
    };

    function goToPage(){
        var pagenum=document.getElementById('page-number').value; // value of input box
        pagenum=pagenum*1; // ensures page is numeric only
        pagelink=pages[pagenum];
        location.href=pagelink; // redirect to new url
    }
    
    /* function pagenav(evt) {
        let isNumber = /^[0-9]$/i.test(evt.key);
        let value=Number(evt.key);
        if(isNumber){
            document.getElementById("page-number").focus();
        };
    } */

</script>

